{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musta\\\\Documents\\\\GitHub\\\\guest_posting\\\\client\\\\src\\\\pages\\\\comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Edit from \"../img/edit.png\";\nimport Delete from \"../img/delete.png\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Menu from \"../components/Menu\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport DOMPurify from \"dompurify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = post_id => {\n  _s();\n  // creating commment array hook :\n\n  const {\n    currentUser,\n    logout\n  } = useContext(AuthContext);\n  const [comment_array, set_comment_array] = useState([]);\n  const [comment_msg, set_comment_msg] = useState(null);\n\n  // function for posting the new comment into the array & adding into the array \n\n  const comment_adder = async () => {\n    console.log(\"THE MSG IS : \", comment_msg);\n    console.log(\"POST ID : \", post_id);\n    try {\n      const single_cmd_obj = [comment_msg, currentUser, post_id];\n      console.log(single_cmd_obj);\n      const res = await axios.post(`/posts/add_comment`, single_cmd_obj);\n      //   set_report_status(res.data.message)\n    } catch (err) {\n      console.log(err);\n      // set_report_status(err.response.data)\n    }\n  };\n\n  // USE EFFECTS :\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(`/posts/get_comments/${post_id}`);\n        // console.log(res.data)\n        set_comment_array(res.data);\n      } catch (err) {\n        // setError(err.response.data);\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [comment_array]);\n  const getText = html => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentInpu\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"comment_input\",\n        onChange: e => set_comment_msg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment_button\",\n        onClick: () => comment_adder(),\n        children: \" \\u270D\\uFE0F Comment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), comment_array.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cmt\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"DisplayComment\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"usrnameCommentDisplay\",\n              children: [comment.username, \" :   \", getText(comment.comment_content)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"rX6cTrJcaorVvm1C3SKyiIu6nL4=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","Edit","Delete","Link","useLocation","useNavigate","Menu","axios","moment","useContext","AuthContext","DOMPurify","Comments","post_id","currentUser","logout","comment_array","set_comment_array","comment_msg","set_comment_msg","comment_adder","console","log","single_cmd_obj","res","post","err","fetchData","get","data","getText","html","doc","DOMParser","parseFromString","body","textContent","e","target","value","map","comment","username","comment_content"],"sources":["C:/Users/musta/Documents/GitHub/guest_posting/client/src/pages/comments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Edit from \"../img/edit.png\";\r\nimport Delete from \"../img/delete.png\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Menu from \"../components/Menu\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\n\r\nconst Comments = (post_id) => {\r\n\r\n    // creating commment array hook :\r\n\r\n    const { currentUser, logout } = useContext(AuthContext);\r\n    const [comment_array , set_comment_array ] = useState([])\r\n    const [comment_msg , set_comment_msg] = useState(null)\r\n\r\n    // function for posting the new comment into the array & adding into the array \r\n\r\n    const comment_adder = async() => {\r\n\r\n        console.log(\"THE MSG IS : \", comment_msg)\r\n        console.log(\"POST ID : \",post_id)\r\n        try {\r\n          \r\n          const single_cmd_obj = [comment_msg , currentUser ,post_id]\r\n          console.log(single_cmd_obj)\r\n          const res = await axios.post(`/posts/add_comment` , single_cmd_obj);\r\n        //   set_report_status(res.data.message)\r\n\r\n        } catch (err){\r\n          \r\n        \r\n          console.log(err)\r\n          // set_report_status(err.response.data)\r\n    \r\n        }\r\n      }\r\n\r\n\r\n\r\n    // USE EFFECTS :\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n  \r\n        try {\r\n          const res = await axios.get(`/posts/get_comments/${post_id}`);\r\n          // console.log(res.data)\r\n          set_comment_array(res.data)\r\n          \r\n        } catch (err) {\r\n          // setError(err.response.data);\r\n          console.log(err)\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    },[comment_array]);\r\n\r\n\r\n\r\n\r\n    const getText = (html) =>{\r\n    const doc = new DOMParser().parseFromString(html, \"text/html\")\r\n    return doc.body.textContent\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n          <div>.</div>\r\n          <div className=\"commentInpu\">\r\n          <input className =\"comment_input\" onChange={(e) => set_comment_msg(e.target.value)}></input>\r\n          <button className = \"comment_button\" onClick = {() => comment_adder()} > ✍️ Comment </button>\r\n          </div>\r\n            {comment_array.map((comment) => ( \r\n            <div>\r\n                <div className=\"comment\" >\r\n                <div className=\"cmt\">\r\n                    <p className=\"DisplayComment\"> <strong className=\"usrnameCommentDisplay\">{comment.username} :   {getText(comment.comment_content)}</strong></p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}