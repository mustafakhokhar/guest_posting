{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/musta/Documents/GitHub/guest_posting/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/musta/Documents/GitHub/guest_posting/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/musta/Documents/GitHub/guest_posting/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import Edit from\"../img/edit.png\";import Delete from\"../img/delete.png\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import Menu from\"../components/Menu\";import axios from\"axios\";import moment from\"moment\";import{useContext}from\"react\";import{AuthContext}from\"../context/authContext\";import DOMPurify from\"dompurify\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(post_id){// creating commment array hook :\nvar _useContext=useContext(AuthContext),currentUser=_useContext.currentUser,logout=_useContext.logout;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comment_array=_useState2[0],set_comment_array=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),comment_msg=_useState4[0],set_comment_msg=_useState4[1];// function for posting the new comment into the array & adding into the array \nvar comment_adder=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var single_cmd_obj,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"THE MSG IS : \",comment_msg);console.log(\"POST ID : \",post_id);_context.prev=2;single_cmd_obj=[comment_msg,currentUser,post_id];console.log(single_cmd_obj);_context.next=7;return axios.post(\"/posts/add_comment\",single_cmd_obj);case 7:res=_context.sent;_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);console.log(_context.t0);// set_report_status(err.response.data)\ncase 13:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function comment_adder(){return _ref.apply(this,arguments);};}();// USE EFFECTS :\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"/posts/get_comments/\".concat(post_id));case 3:res=_context2.sent;// console.log(res.data)\nset_comment_array(res.data);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);// setError(err.response.data);\nconsole.log(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[comment_array]);var getText=function getText(html){var doc=new DOMParser().parseFromString(html,\"text/html\");return doc.body.textContent;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:\".\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"commentInpu\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"comment_input\",onChange:function onChange(e){return set_comment_msg(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"comment_button\",onClick:function onClick(){return comment_adder();},children:\" \\u270D\\uFE0F Comment \"})]}),comment_array.map(function(comment){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"comment\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cmt\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"DisplayComment\",children:[\" \",/*#__PURE__*/_jsxs(\"strong\",{className:\"usrnameCommentDisplay\",children:[comment.username,\" :   \",getText(comment.comment_content)]})]})})})});})]});};export default Comments;","map":{"version":3,"names":["React","useEffect","useState","Edit","Delete","Link","useLocation","useNavigate","Menu","axios","moment","useContext","AuthContext","DOMPurify","Comments","post_id","currentUser","logout","comment_array","set_comment_array","comment_msg","set_comment_msg","comment_adder","console","log","single_cmd_obj","post","res","fetchData","get","data","getText","html","doc","DOMParser","parseFromString","body","textContent","e","target","value","map","comment","username","comment_content"],"sources":["C:/Users/musta/Documents/GitHub/guest_posting/client/src/pages/comments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Edit from \"../img/edit.png\";\r\nimport Delete from \"../img/delete.png\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport Menu from \"../components/Menu\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\n\r\nconst Comments = (post_id) => {\r\n\r\n    // creating commment array hook :\r\n\r\n    const { currentUser, logout } = useContext(AuthContext);\r\n    const [comment_array , set_comment_array ] = useState([])\r\n    const [comment_msg , set_comment_msg] = useState(null)\r\n\r\n    // function for posting the new comment into the array & adding into the array \r\n\r\n    const comment_adder = async() => {\r\n\r\n        console.log(\"THE MSG IS : \", comment_msg)\r\n        console.log(\"POST ID : \",post_id)\r\n        try {\r\n          \r\n          const single_cmd_obj = [comment_msg , currentUser ,post_id]\r\n          console.log(single_cmd_obj)\r\n          const res = await axios.post(`/posts/add_comment` , single_cmd_obj);\r\n        //   set_report_status(res.data.message)\r\n\r\n        } catch (err){\r\n          \r\n        \r\n          console.log(err)\r\n          // set_report_status(err.response.data)\r\n    \r\n        }\r\n      }\r\n\r\n\r\n\r\n    // USE EFFECTS :\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n  \r\n        try {\r\n          const res = await axios.get(`/posts/get_comments/${post_id}`);\r\n          // console.log(res.data)\r\n          set_comment_array(res.data)\r\n          \r\n        } catch (err) {\r\n          // setError(err.response.data);\r\n          console.log(err)\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    },[comment_array]);\r\n\r\n\r\n\r\n\r\n    const getText = (html) =>{\r\n    const doc = new DOMParser().parseFromString(html, \"text/html\")\r\n    return doc.body.textContent\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n          <div>.</div>\r\n          <div className=\"commentInpu\">\r\n          <input className =\"comment_input\" onChange={(e) => set_comment_msg(e.target.value)}></input>\r\n          <button className = \"comment_button\" onClick = {() => comment_adder()} > ✍️ Comment </button>\r\n          </div>\r\n            {comment_array.map((comment) => ( \r\n            <div>\r\n                <div className=\"comment\" >\r\n                <div className=\"cmt\">\r\n                    <p className=\"DisplayComment\"> <strong className=\"usrnameCommentDisplay\">{comment.username} :   {getText(comment.comment_content)}</strong></p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Comments;"],"mappings":"8aAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAOC,KAAI,KAAM,iBAAiB,CAClC,MAAOC,OAAM,KAAM,mBAAmB,CACtC,OAASC,IAAI,CAAEC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CACjE,MAAOC,KAAI,KAAM,oBAAoB,CACrC,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAOC,OAAM,KAAM,QAAQ,CAC3B,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAOC,UAAS,KAAM,WAAW,CAAC,wFAGlC,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,OAAO,CAAK,CAE1B;AAEA,gBAAgCJ,UAAU,CAACC,WAAW,CAAC,CAA/CI,WAAW,aAAXA,WAAW,CAAEC,MAAM,aAANA,MAAM,CAC3B,cAA6Cf,QAAQ,CAAC,EAAE,CAAC,wCAAlDgB,aAAa,eAAGC,iBAAiB,eACxC,eAAwCjB,QAAQ,CAAC,IAAI,CAAC,yCAA/CkB,WAAW,eAAGC,eAAe,eAEpC;AAEA,GAAMC,cAAa,4FAAG,4JAElBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEJ,WAAW,CAAC,CACzCG,OAAO,CAACC,GAAG,CAAC,YAAY,CAACT,OAAO,CAAC,iBAGzBU,cAAc,CAAG,CAACL,WAAW,CAAGJ,WAAW,CAAED,OAAO,CAAC,CAC3DQ,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,uBACThB,MAAK,CAACiB,IAAI,sBAAwBD,cAAc,CAAC,QAA7DE,GAAG,gGAMTJ,OAAO,CAACC,GAAG,aAAK,CAChB;AAAA,qEAGH,kBAlBGF,cAAa,0CAkBhB,CAIH;AAEArB,SAAS,CAAC,UAAM,CACd,GAAM2B,UAAS,6FAAG,0LAGInB,MAAK,CAACoB,GAAG,+BAAwBd,OAAO,EAAG,QAAvDY,GAAG,gBACT;AACAR,iBAAiB,CAACQ,GAAG,CAACG,IAAI,CAAC,oFAG3B;AACAP,OAAO,CAACC,GAAG,cAAK,uEAEnB,kBAXKI,UAAS,2CAWd,CAEDA,SAAS,EAAE,CACb,CAAC,CAAC,CAACV,aAAa,CAAC,CAAC,CAKlB,GAAMa,QAAO,CAAG,QAAVA,QAAO,CAAIC,IAAI,CAAI,CACzB,GAAMC,IAAG,CAAG,GAAIC,UAAS,EAAE,CAACC,eAAe,CAACH,IAAI,CAAE,WAAW,CAAC,CAC9D,MAAOC,IAAG,CAACG,IAAI,CAACC,WAAW,CAC3B,CAAC,CAID,mBACI,oCACE,0BAAY,cACZ,aAAK,SAAS,CAAC,aAAa,wBAC5B,cAAO,SAAS,CAAE,eAAe,CAAC,QAAQ,CAAE,kBAACC,CAAC,QAAKjB,gBAAe,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,EAAS,cAC5F,eAAQ,SAAS,CAAG,gBAAgB,CAAC,OAAO,CAAI,yBAAMlB,cAAa,EAAE,EAAC,oCAAuB,GACvF,CACHJ,aAAa,CAACuB,GAAG,CAAC,SAACC,OAAO,qBAC3B,kCACI,YAAK,SAAS,CAAC,SAAS,uBACxB,YAAK,SAAS,CAAC,KAAK,uBAChB,WAAG,SAAS,CAAC,gBAAgB,4BAAE,gBAAQ,SAAS,CAAC,uBAAuB,WAAEA,OAAO,CAACC,QAAQ,SAAOZ,OAAO,CAACW,OAAO,CAACE,eAAe,CAAC,GAAU,GAAI,EAC7I,EACA,EACJ,EACT,CAAC,GACI,CAGd,CAAC,CAED,cAAe9B,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}